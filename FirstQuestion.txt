Наследование, инкапсуляция, полиморфизм. Примеры использования. Ключевое слово final в наследовании. Аннотация @override.

Наследование позволяет создать новый класс на основе уже существующего, заимствуя его поля и методы и добавляя новые или переопределяя существующие. Этот механизм способствует повторному использованию кода. В Java наследование реализуется с помощью ключевого слова extends. 

class Animal {
    public void makeSound() {
        System.out.println("Some sound");
    }
}

class Dog extends Animal {
    @Override
    public void makeSound() {
        System.out.println("Bark");
    }
}

Инкапсуляция скрывает внутреннее состояние объекта и требует взаимодействия с ним через интерфейс взаимодействия. Один из столпов ООП!!! Позволяет воспринимать объект как черный ящик.
Через 4 модификатора доступа реализовано - private, protected, public, default. На самом деле эта идея преследуется еще и в packages, но это уже другая обширная тема

Полиморфизм - способность однотипного взаимодействия через различные реализации (много форм). Есть два типа полиморфмизма. Один через классы, наследование и интерфейсы, другой через перегрузку методов.

Ключевое слово final в Java используется, чтобы предотвратить дальнейшее наследование класса или переопределение метода.