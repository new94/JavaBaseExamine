1. Классы, интерфейсы и перечисления. Ключевые слова abstract, interface, enum, default. Разница между абстрактным классом и интерфейсом. Вложенные классы.

--- Класс — это шаблон для создания объектов. оН определяет состояние и поведение этих объектов через поля и методы.
- Ключевое слово "class" используется для описания класса.
public class A {
    // Метод для вычисления суммы двух чисел
    public int sum(int n1, int n2) {
    return n1 + n2;
    }
    public static void main(String[] args) {
        // Создаем экземпляр класса A
         A calculator = new A();
        int result = calculator.sum(5, 10);
        }
}

Абстрактный класс часто содержит абстрактные методы (методы без тела), которые нужно реализовать в дочерних классах.
Используется как базовый класс, от которого наследуются другие классы.

--- Интерфейсы
-Определяют контракт, включая методы и константы.
-Классы реализуют интерфейсы, используя ключевое слово implements.
-Возможно наследовать один интерфейс от другого.
-Могут быть поля с доступом private.
-Методы интерфейса могут быть статическими.

1. abstract
Используется для объявления абстрактных классов и методов.
Абстрактный класс не может быть инстанциирован и может содержать абстрактные методы, которые должны быть реализованы в наследниках.
Абстрактный метод — это метод без тела, объявляемый с ключевым словом abstract.

2. interface
Определяет контракт, который обязаны реализовать все классы, имплементирующие этот интерфейс.
Интерфейсы могут содержать абстрактные методы, статические методы и методы с реализацией по умолчанию (с использованием слова default).

3. enum
Используется для создания перечислений — ограниченных наборов констант.
Перечисления могут содержать методы и конструкторы

4. default
Применяется для методов в интерфейсах, чтобы предоставить реализацию по умолчанию.
Позволяет добавлять новые методы в интерфейс.


Перечисления (enum) используются для представления конечных наборов именованных констант,
Имеет методы ordinal() — возвращает порядковый номер константы и values, возвращающий список всех констант.

Разница между абстрактным классом и интерфейсом
-Класс может наследовать только один абстрактный класс, но при этом может реализовывать множество интерфейсов.
-Абстрактные классы могут иметь конструкторы, а интерфейсы — нет.


