`Set` — это интерфейс коллекций, который не допускает дубликатов. Его основные реализации — `HashSet`, `LinkedHashSet` и `TreeSet`. `HashSet` основан на хэш-таблице и не сохраняет порядок элементов. `LinkedHashSet` также использует хэш-таблицу, но сохраняет порядок вставки. `TreeSet` реализован на основе сбалансированного дерева и хранит элементы в отсортированном порядке.

В `HashSet` для добавления элемента используется метод `hashCode()` для определения бакета в хэш-таблице. Если в бакете уже есть элементы, метод `equals()` проверяет, является ли элемент дубликатом. Если дубликатов нет, элемент добавляется. Поиск элемента работает аналогично: по `hashCode()` определяется бакет, где выполняется проверка методом `equals()`. Удаление элемента производится в том же порядке.

В среднем операции добавления, удаления и поиска в `HashSet` выполняются за O(1), но при большом количестве коллизий (например, при плохой реализации метода `hashCode()`) их производительность может снизиться до O(n).