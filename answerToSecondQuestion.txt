Java Memory Model (JMM) определяет, как потоки взаимодействуют через общую память, устанавливая правила видимости, порядка выполнения и синхронизации. Основные аспекты JMM включают разделение памяти на стек, где хранятся локальные переменные и вызовы методов, и кучу (heap), которая используется для объектов и их полей. Важной частью модели является гарантия того, что корректно синхронизированные программы будут работать одинаково на любой платформе. Например, без использования синхронизации изменения, сделанные одним потоком, могут быть невидимы для другого.

Garbage Collector (GC) отвечает за автоматическое управление памятью, освобождая её от объектов, на которые больше нет ссылок. Это предотвращает утечки памяти и упрощает работу разработчика. GC работает на куче и использует различные алгоритмы для её очистки. Основные этапы его работы: поиск "неживых" объектов (тех, на которые больше нет ссылок), а затем освобождение или перемещение памяти. Чтобы повысить производительность, куча делится на молодое (Young Generation), старое (Old Generation) и мета-пространство (Metaspace).

G1 (Garbage First) — это современный сборщик мусора, который был разработан для больших кучи и минимизации пауз. Вместо глобального сканирования он делит кучу на регионы и работает с наиболее заполненными из них. G1 выполняет параллельный и инкрементный сбор, что делает его более предсказуемым, обеспечивая небольшие паузы. Его особенность — умение автоматически балансировать между временем пауз и пропускной способностью.

CMS (Concurrent Mark-Sweep) — это сборщик мусора, который стремится минимизировать паузы приложения. Он работает в два основных этапа: сначала выполняется маркировка "живых" объектов, затем удаление "мертвых". При этом некоторые этапы (например, поиск ссылок) выполняются параллельно с работой приложения. Однако у CMS есть недостатки: он может фрагментировать память, что иногда приводит к увеличению времени выполнения пауз или к необходимости выполнения полной очистки памяти (Full GC).

CMS подходит для приложений с высокими требованиями к времени отклика, а G1 предпочтителен для больших кучи и систем, где важно предсказуемое поведение.